{
  "hash": "d7a4e9ab9936de8003adcfd1b6f9acb4",
  "result": {
    "markdown": "---\ntitle: How Imitative AI Can Outperform Humans\nauthor: Tom Cunningham, [Integrity Institute](https://integrityinstitute.org/)\ndate: today\nfig-align: center\nfig-height: 1\nbibliography: ai.bib\nreference-location: margin\nengine: knitr\nexecute:\n  echo: false\n  warning: false\n  error: false\n  cache: true\nformat:\n   html:\n      toc: true\n      toc-depth: 2\n      toc-location: left\n      html-math-method:\n         method: mathjax\n         url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg-full.js\"\n         #     ^ this forces SVG instead of CHTML, otherwise xypic renders weird\n      include-in-header:\n         - text: |\n            <script>window.MathJax = {\n                     loader: { load: ['[custom]/xypic.js'],\n                                 paths: {custom: 'https://cdn.jsdelivr.net/gh/sonoisa/XyJax-v3@3.0.1/build/'}},\n                  tex: {packages: {'[+]': ['xypic']},\n                     macros: {\n                        bm: [\"\\\\boldsymbol{#1}\", 1],\n                        bmatrix: [\"\\\\begin{bmatrix}#1\\\\end{bmatrix}\", 1],\n                        smallmatrix: [\"\\\\begin{smallmatrix}#1\\\\end{smallmatrix}\", 1],\n                        ut: [\"\\\\underbrace{#1}_{\\\\text{#2}}\", 2],\n                        utt: [\"\\\\underbrace{#1}_{\\\\substack{\\\\text{#2}\\\\\\\\\\\\text{#3}}}\", 3]\n                     }}};\n            </script>\n            <style>\n               h1 {  border-bottom: 4px solid black; }\n               h2 {  border-bottom: 1px solid gray; padding-bottom: 0px; color: black; }\n               dl { margin-bottom: 0px; }\n               dt strong { font-weight: bold; }\n               dd { margin-left: 20px; }\n               .cell-output-display p {padding: 0 0 1cm 0; margin: 0 0 0 0;}\n            </style>\n---\n\n<!-- \n   URL: https://tecunningham.github.io/posts/2023-09-05-model-of-ai-imitation.html\n   SEE ALSO: prussia/2023-09-05-OFFCUTS-model-of-ai-imitation.md\n   TODO: use n and p instead of m and n\n   TODO: series of cases and illustrations from GPT4-->\n<style>p { text-indent: -2em; margin-left: 2em; }</style>\n\n**If we train an AI to imitate humans, will it ever beat humans?** Large language models (LLMs) are trained to predict what humans would say in a given situation (with some qualifications). It would seem to follow that they would never be *better* at answering questions than a human.\n\n**In a formal model, imitative AI can beat humans for three reasons:**\n\n   1. **Averaging out error.** Different humans give different answers to a question, and so if an LLM can consistently give the average answer it will do better than the average human (the error of the average being always smaller than the average error).\n   2. **Specialization.** People tend to write about what they know, and so an LLM which learns from written language will sound like a specialist in all areas: it will answer questions about water like a hydrologist, and questions about bugs like an entomologist (although they also answer questions about astrology like astrologists).\n   3. **Interpolation.** An LLM will interpolate responses from different humans, and this interpolation can be functionally equivalent to inference, meaning an LLM will sometimes be able to reliably answer questions that *no* human can answer.\n\n**Additionally AI can learn and use tacit human knowledge.** The majority of human knowledge is tacit, meaning it is used in forming judgments but we do not have conscious access to that knowledge. If AI models can accurately predict human judgments then the weights in those models effectively contain that tacit knowledge, and so the model can be re-engineered to use that knowledge in ways that humans cannot.\n\n**This blog post contains:** (1) a simple visual illustration of the argument; (2) a formal model and derivation of the claims above; (3) a variety of applications; (4) discussion of related literature and complications. This is work in progress and I'm planning to keep adding material to this post.\n\n#           Setup: Questions and Answers\n\n**For concreteness I will describe humans and computers answering questions about the world.** However I think the basic framework applies generally to performing tasks. Some examples of questions and answers:\n\n   | question                                                                              | answer |\n   | ------------------------------------------------------------------------------------- | ------ |\n   | What's the capital of Switzerland?                                                    | Geneva |\n   | What's the best response if white plays c4?                                           | c5     |\n   | Does this picture contain a cow? üêÑ                                                  | Yes    |\n   | How much more likely are you to buy a Coke after hearing the slogan \"Coke refreshes\"? | 0.1%   |\n\n#           Graphical Argument\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-1_3b5d7eef8dfdf4085752d8355c548148'}\n\n:::\n\n**(1) Let this curve represent the world.** Each question about the world is a point on the x-axis, and the answer to each question is represented by the curve.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-2_b36eb930a2bdc1bcbd1b69e62af7ad13'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**(2) A human forms beliefs about the world (red curve).** The human asks two questions and gets two answers (red dots) and from these they form estimates of the answer to every other question (red line).\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-3_31a99f00dfb7aea3650bd0b87a0e9245'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**(3) A computer learns to predict the human's answers (green curve).** The human records some questions and their answers (green dots), and the computer learns to predict the human's answers (green curve). Here I have drawn the best case, where the fit is perfect, but we would never expect the computer to do *better* than the human.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-4_a62fd2155a2954d2d9bee17cd64a7079'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**(4) Add another human (blue curve).** Suppose we have an additional human who asks some different questions (blue dots) and so forms different beliefs. Each human's beliefs are are accurate in the neighborhood of their experience.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-5_38a4528f7ce7f031359262ecfb86a073'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**(5) Let the computer predict answers from both humans (green curve).** Now both humans record their experiences and the computer tries to predict human answers (green curve). Here we can see:\n   \n   1. **Specialization.** The computer's predictions can match the humans' responses in each of their domains of expertise\n   2. **Interpolation.** The computer is better than *both* humans in the intermediate region, i.e. the computer effectively combines information from both humans.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-6_064fdac4d4a2acb7a48b5a23dfe9ecb4'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n**(6) Let the human have tacit knowledge.** Suppose the human always knows correct the answer when they see the question (red), but their conscious understanding of the relationship (pink) is imperfect. When asked which question would get the highest answer, i.e. what is the maximum of this function, then they will choose the maximum of the pink curve. However the computer could learn the red curve and algorithmically find the maximum.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-7_4379706993d6efd02ffac199e1a91e0c'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n#           Discussion\n\n**Are current LLMs imitative?** Most recent large language models start by training on a pure next-token prediction task from a large corpus of text, but they additionally go through fine-tuning stages. E.g. OpenAI's 2022 [InstructGPT](https://openai.com/research/instruction-following) describes (1) training against custom-written answers to prompts; (2) reinforcement learning against human evaluation of the LLM's outputs[^RLHF]. These fine-tuning steps dramatically improve the LLM's performance on instruction-following benchmarks. The first type of fine-tuning could be described as imitative but using a different set of human responses that it's imitating. The second type is somewhat different because we're now using human *evaluation* instead of human *production*, and so the surface being fitted is distinct. However I do not think the RLHF fundamentally changes the argument in this note, and in fact the InstructGPT paper shows that a purely imitative model's performance continues to trend upwards as model size increases, implying that capabilities of current-level RLHF models could be achieved with pure imitation with sufficiently large model and training-set size.\n\n   [^RLHF]: Technically, reinforcement learning against a model trained to predict human evaluation of outputs.\n\n**Do current LLMs outperform humans?** Consider GPT-4:\n\n   1. **For any given human, GPT-4 clearly can beat them on some domains.** GPT-4 has an encylopedic ability to answer questions, so for any individual human they can clearly outperform them on a large set of questions.\n   2. **Modern LLMs can translate between two languages with no common speaker.** Modern language models can translate between arbitrary pairs of language. I haven't seen explicit confirmation of this, but I assume this includes pairs for which there exists no common speaker and I assume that a purely imitative LLM (without training on human evaluation) would still be able to do at least rudimentary translation.\n   3. **Modern LLMs can combine information.** GPT-4 is good at combining two different capabilities, e.g. writing a sonnet about quantum theory, or a ballad in Spanish about New Zealand. It seems likely there are many such combination tasks which no single human could perform unaided.\n\n**Averaging out Error (\"wisdom of crowds\").** There is an additional reason why an imitative AI will outperform humans, not illustrated above: suppose there is some variance in how humans report their answers (noise either in perception, belief formation, or in recording answers). We could illustrate this with multiple red lines at step 2. It's clear that if the computer tries to predict the average human response then it will end up closer to the ground truth than the average human.\n\n**Specalization depends on people writing what they know.** The \"specialization\" result above depends on a correlation between evidence and error: for any given question the answer observed in the training data is more likely to come from a human who has direct experience (and so lower error). This seems a reasonable assumption, that people typically write about what they know. However there are a clear cases where the opposite occurs: where the people who write the most about a topic are the people who have the least accurate beliefs about it, e.g. conspiracy theories, politically partisan issues, or astrology. In these cases we would expect AI to answer question copying these people.^[Analogically, in music or visual art, there might be some genres where the people who create artworks are uniquely bad at it, and so in these genres imitative AI would learn to make artworks worse than the average human would make.]\n\n**Defining superhuman abilities.** We can formalize \"superhuman\" abilities in a variety of ways, e.g.:\n\n   $$\\begin{aligned}\n      \\text{weak:}&& \\ut{E[a(q)-\\bar{a}(q)]^2}{error of computer}\n         &\\leq  \\ut{\\frac{1}{n}\\sum_{i=1}^nE[a(q)-\\hat{a}_i(q)]^2}{avg error of human}\\\\\n      \\text{medium:}&& \\ut{E[a(q)-\\bar{a}(q)]^2}{error of computer}\n         &\\leq  \\ut{E\\left[a(q)-\\frac{1}{n}\\sum_{i=1}^n\\hat{a}_i(q)\\right]^2}{error of avg human}\\\\\n      \\text{strong:}&& \\ut{E[a(q)-\\bar{a}(q)]^2}{error of computer}\n         &\\leq  \\ut{\\min_{i=1,\\ldots,n}E[a(q)-\\hat{a}_i(q)]^2}{error of best human}\\\\\n      \\text{super-strong:}&& \\ut{E[a(q)-\\bar{a}(q)]^2}{error of computer}\n         &\\leq  \\ut{E[\\min_{i=1,\\ldots,n}\\{a(q)-\\hat{a}_i(q)\\}]^2}{error of best human by question}\\\\\n   \\end{aligned}$$\n\n   Note that we cannot rank benchmark #2 and #3: the error of the best human could be either higher or lower than the error of the average human. \n\n\n**The importance of tacit knowledge.** The relative success of machine learning over symbolic AI has often been connected to the importance of tacit human knowledge, e.g. by Geoff Hinton. I have written a lot about the importance of tacit knowledge in human decision-making ([post](https://tecunningham.github.io/posts/2017-12-10-unconscious-influences.html), [paper](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=MDB_DgkAAAAJ&citation_for_view=MDB_DgkAAAAJ:WF5omc3nYNoC), [paper](http://jondequidt.com/pdfs/paper_implicit.pdf)).\n\n**AI could be used to create super-human artefacts.** There has been a lot of discussion about whether AI be used to exceed human abilities to create certain artefacts, e.g. hyper-beautiful paintings, hyper-addictive clickbait, hyper-persuasive text. Using the existing architecture of LLMs, which predict human outputs, this is unlikely: they might be able to predict the objects that a very talented human would produce, but would not surpass their ability. However AI could be used to generate artfeacts indirectly: instead of predicting how a human would create such an arfect, the weights that the AI has learned could be used to find the artefact which maximizes the function of interest, e.g. hyper-persuasive, or hyper-beautiful. In this way the AI could create artefacts beyond the ability of any human. This is roughly how image synthesis algorithms work: after training a model to recognize images, new images can be created by maximizing the learned weights.\n\n**Economic implication: imitative AI brings everybody to the knowledge frontier.** An imitative LLM can effectively serve as a consultant: it will tell you how a domain-expert would answer your question. For some problems we've already been able to do that for a long time, e.g. a textbook will tell you scientific advice on crop management practices, but LLMs allow for much subtler contingencies and to incorporate tacit knowledge. We should therefore expect the productivity impact of LLMs to be mainly on those who are behind the knowledge frontier, and we might also expect a compression of incomes.\n   <!-- 3. By pooling all the information in the training set LLMs allow everybody to have expert-level judgment on a given subject, and so give relatively bigger advantage to those with less knowledge. -->\n\n\n::: {.cell .column-margin hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-8_9bfcafa9a152dd3ebffc39a94f71c64d'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n**Venn diagram representation.** This diagram shows an alternative way of representing some of the core claims: in general the questions answerable by an LLM will not be a subset of the questions answered in the training set, or even those answerable by the people who contributed to the training set. The Venn diagram's disadvantage, relative to the visualizations above, is that it does not represent the mechanics of *why* the LLM can outperform humans, while the diagram above can be use to separately show four distinct reasons (averaging error, specialization, interpolation, and using tacit knowledge).\n\n#           Linear Model\n\n**Here I give a more formal model and derive some results.** I wrote this model before coming up with the graphical argument above. There is a substantial overlap in implications, but I think there is some value in this linear model in the precision with which we define each quantity. The model has three steps:\n\n   $$\\xymatrix@C=.5cm@R=0cm{\n      \\text{world}\n      && \\text{human}\n      && \\text{LLM}\\\\\n      *+[F:<5pt>]{\\bm{w}} \\ar[rr]^{\\bm{a}=Q\\bm{w}}\n      && *+[F:<5pt>]{\\hat{\\bm{w}}} \\ar[rr]^{\\hat{\\bm{a}}=\\hat{Q}\\hat{\\bm{w}}}\n      && *+[F:<5pt>]{\\bar{\\bm{w}}} \\ar[rr]^{\\tilde{a}=\\tilde{q}'\\bar{\\bm{w}}}\n      && \\  \\\\\n      \\txt{unobserved\\\\truth\\\\about\\\\the\\\\world}\n      & \\txt{answers\\\\to\\\\human\\\\questions}\n      & \\txt{beliefs\\\\formed\\\\by\\\\human}\n      & \\txt{text\\\\written\\\\by\\\\human}\n      & \\txt{LLM\\\\model\\\\of\\\\human\\\\text}\n      & \\txt{LLM's\\\\answers\\\\to\\\\new\\\\questions}\n   }$$\n\n**Questions and answers.** A question is defined by a set of binary attributes ($q_1,\\ldots,q_n\\in\\{-1,1\\}$), and the answer is a linear function of those attributes given some unobserved weights $w_1,\\ldots,w_n$ (see below for derivation):\n\n   $$\\begin{aligned}\n      \\ut{\\bmatrix{a^1 \\\\ \\vdots \\\\ a^m}}{answers}\n         = \\ut{\\bmatrix{q_1^1 w_1 + \\ldots q_n^1w_n \\\\ \\vdots \\\\ q_1^m w_1 + \\ldots q_n^mw_n}}{questions}\n   \\end{aligned}$$\n\n\n**Human beliefs.** After observing a set of question and their real-world answers the human will form beliefs about the weights $w_1,\\ldots,w_n$. We can explicitly write the human posteriors if we assume their priors are Gaussian and i.i.d. ($\\bm{w}\\sim N(0,\\sigma^2I)$):[^covariance]\n   $$\\begin{aligned}\n      \\bm{a}        &= Q\\bm{w}\n         && \\text{(questions \\& answers given true weights $\\bm{w}$)}\\\\\n      \\hat{\\bm{w}} &= Q'(QQ')^{-1}\\bm{a}\n         && \\text{(human estimate of true weights $\\bm{w}$)}\n   \\end{aligned}$$\n\n   I will assume that the number of unobserved weights is large relative to the human's experience ($n\\gg m$), so the human will gradually learn more about reality as she observes the answer to more questions, and will be able to perfectly answer any question she's seen before, but will never learn the full set of weights.\n\n   [^covariance]: I am assuming $\\bm{w}$ has zero-mean and is i.i.d. just to cut down on notation, the results all hold for the more general multivariate Normal case.\n\n**Computer beliefs.** Suppose that humans write down some set of question and answer them given their beleifs. We use that text to train a computer to predict the answer given any question, and the computer likewise assumes a linear model with i.i.d. Gaussian weights. Then we can explicitly write the computer-estimated weights:\n\n   $$\\begin{aligned}\n      \\hat{\\bm{a}}        &= \\hat{Q}\\hat{\\bm{w}}\n         && \\text{(human-generated questions \\& answers)}\\\\\n      \\bar{\\bm{w}} &= \\hat{Q}'(\\hat{Q}\\hat{Q}')^{-1}\\hat{\\bm{a}}\n         && \\text{(computer estimate of human weights $\\hat{\\bm{w}}$)}\n   \\end{aligned}$$\n\n**Computer answers.** Finally we can ask the computer a new question, $\\tilde{q}$, and observe its answer:\n   $$\\begin{aligned}\n      \\tilde{a}        &= \\tilde{\\bm{q}}'\\bar{\\bm{w}}\n         && \\text{(computer answer to a novel question $\\tilde{\\bm{q}}$)}\\\\\n   \\end{aligned}$$\n\n\n##           Model Implications\n\n**If one human records all their observations then the computer will perfectly imitate them.** \n:  Suppose that there is one human and they write down all of their observations, $\\hat{Q}=Q$. Then the computer's beliefs will be the same as the human's beliefs ($\\hat{\\bm{w}}=\\bar{\\bm{w}}$), and so the computer will answer every question exactly as the human does, though neither knows the truth ($\\bar{\\bm{w}}\\neq\\bm{w}$).\n\n**If humans do not record all their observation then the computer will perform worse.**\n:  Suppose humans only write down some of their observations, i.e. $\\hat{Q}$ is a row-wise subset of $Q$. Then computers and humans will give the same answers for any question in the training set, but outside of that set computers will generally do worse than humans. And so for every question $\\bm{q}$ the computer will do worse in expectation:\n   $$E[\\ut{(\\bm{q}\\bm{a}-\\bm{q}\\bar{\\bm{a}})^2}{computer error}]\\geq\n      E[\\ut{\\bm{q}(\\bm{a}-\\hat{\\bm{a}})}{human error}].$$\n\n<!-- ADD: will get wisdom-of-crowds if there's noise\n     ADD: mention of old literature on expert systems beating the experts -->\n\n**If there are multiple humans then the computer will outperform them both.**\n: Suppose there are two humans who each observe answers to different question, $Q_A$ and $Q_B$, and they both write them all down, so $\\bar{Q}=(\\smallmatrix{Q_A\\\\Q_B})$ and $\\bar{\\bm{a}}=(\\smallmatrix{Q_A\\bm{w}\\\\Q_B\\bm{w}})$. Now the computer clearly has superior information to either human, and so for both $i\\in\\{1,2\\}$ and every question $\\bm{q}$ we can write:\n      $$E[\\ut{(\\bm{q}\\bm{a}-\\bm{q}\\bar{\\bm{a}})^2}{computer error}]\\leq\n      E[\\ut{\\bm{q}(\\bm{a}-\\hat{\\bm{a}}_i)}{human error}].$$\n\n**If there are multiple humans then the computer can answer question no human can answer.** \n \n: Suppose two humans observe the answers to the following questions:\n   $$\\begin{aligned}\n      Q_A &= \\bmatrix{1 & 1 & 1 \\\\ 1 & -1 & 1} \\\\\n      Q_B &= \\bmatrix{1 & 1 & 1 \\\\ 1 & 1 & -1}\n   \\end{aligned}$$\n      The first human will learn the exact value of $w_2$, and the second human will learn the exact value of $w_3$, but neither will learn both, and so neither could perfectly predict the answer to this question:\n      $$\\begin{aligned}\n         \\tilde{q} &= \\bmatrix{1 & -1 & -1} \\\\\n      \\end{aligned}$$\n\n      However if they both recorded their observations, so the computer observes $\\bar{\\bm{a}}=(\\smallmatrix{Q_1\\bm{w}\\\\Q_2\\bm{w}})$, the computer will be able to infer both $w_2$ and $w_3$, and thus will be able to perfectly answer $\\tilde{q}$.\n\n      We can see this behaviour in LLMs: they sometimes combine a pair of facts or a pair of abilities which no single human has access to, e.g. when an LLM translates between two languages, for which there exists no human speaker of both.\n\n**If humans write outside their expertise then the computer will do worse.** \n\n:     In the cases above we assumed that the two humans recorded only what they directly observed. This means the computer essentially had a window directly to the world. However the humans could instead have written down their estimated answers to other questions. Suppose they both wrote down answers to every possible question, then the computer would learn the *average* of the two human's estimated weights:[^noise]\n   $$\\bar{\\bm{w}}=\\frac{1}{2}\\hat{\\bm{w}}_A+\\frac{1}{2}\\hat{\\bm{w}}_B.$$\n\n      Here the computer will do worse than the two humans on the original questions, $Q_A$ and $Q_B$.\n\n      The implication is that LLMs work so well only because people tend to write about what they know. Put another way, when an LLM answers a question, it will not predict the answer given by the average person, but will predict the answer given by people who are likely to answer that question in the real world, and luckily those people tend to be people who are subject-matter experts.\n\n   [^noise]: We would have to augment the computer's learning rule to allow for noise in answers - I need to confirm that the weighting will be exactly 1/2.\n\n\n**If humans have tacit knowledge, the computer model can outperform humans in creation of new artefacts.** \n\n: Suppose humans have tacit knowledge of the world, we can model this with two separate sets of beliefs:\n   $$\\begin{aligned}\n      \\hat{\\bm{w}}^T   &= \\text{tacit knowledge}\\\\\n      \\hat{\\bm{w}}^E &= \\text{explicit knowledge}\\\\\n   \\end{aligned}$$\n\n      When the human encounters a new question $\\tilde{\\bm{q}}$ they will use their tacit knowledge to form an estimate of the answer, $\\hat{a}=\\tilde{\\bm{q}}'\\hat{\\bm{w}}^T$. For simplicity assume tacit knowledge is perfectly accurate $\\hat{\\bm{w}}^T=\\bm{w}$, and explicit knowledge is imperfect.\n   \n      The distinction becomes important when we want to create a new question. Here it's useful to interpret $\\bm{q}$ not as a question but as an artefact, e.g. text or image, and $\\bm{a}=\\bm{q}'\\bm{w}$ represents some abstract property, e.g. how beautiful or how rhythmic. Suppose we want to chosose $\\bm{q}\\in\\{-1,1\\}^n$ to maximize $\\bm{w}\\bm{q}$. If we had perfect access to our beliefs $\\bm{w}^T$ this would be simple, however if we have access only to imperfect explicit knowledge $\\hat{\\bm{w}}^E$, the artefact which maximizes that function will not generally be the one which maximizes $a$.\n\n      Here the computer model is less constrained. Suppose the computer has observed sufficiently many questions until they have perfectly learned the tacit knowledge, $\\bar{\\bm{w}}=\\hat{\\bm{w}}^T$. Then if computation is free the computer could be used to query every single $\\bm{q}\\in\\{-1,1\\}^n$ to find the best possible artefact.\n\n##           Derivation\n\n$$\\begin{aligned}\n   Q &= \\bmatrix{q_1^1 & \\ldots & q^1_n \\\\ & \\ddots \\\\ q^m_1 & \\ldots & q^m_n}\n      && \\text{(set of questions)} \\\\\n   w'  &= \\bmatrix{w_1 \\ldots w_n} \\\\\n   a    &= \\bmatrix{a^1 \\\\ \\vdots \\\\ a^m} \n      = \\bmatrix{q_1^1 w_1 + \\ldots q_n^1w_n \\\\ \\vdots \\\\ q_1^m w_1 + \\ldots q_n^mw_n} \\\\\n\\end{aligned}$$\n\n   $$\\begin{aligned}\n      \\bm{w} &\\sim N(0,\\Sigma) \n         && (n\\times 1\\text{ vector of parameters of the world)}\\\\\n      Q      &\\in \\{-1,1\\}^{n\\times m}\n         && \\text{($m$ questions, each has $n$ binary parameters)}\\\\\n      \\ut{\\bm{a}}{$m\\times1$}   &= \\ut{Q}{$m\\times n$}\\ut{\\bm{w}}{$n\\times1$}\n         && \\text{(answers provided by the world)}\\\\\n      \\hat{\\bm{w}} &= E[\\bm{w}|Q,\\bm{a}]\n            && \\text{(human beliefs about the world)}\\\\\n         &= \\ut{\\Sigma Q'}{$Cov(\\bm{w},\\bm{a})$}\n            (\\ut{Q\\Sigma Q'}{$Var(\\bm{a})$})^{-1}\n            \\bm{a}\n   \\end{aligned}$$\n\n**With one observation and two weights.** Suppose $m=1, n=1$, then we have:\n   $$\\begin{aligned}\n      Q  &= \\bmatrix{q_1 & q_2} \\\\\n      \\bm{a}'  &= \\bmatrix{a} \\\\\n      \\bm{w}'  &= \\bmatrix{w_1 & w_2 } \\\\\n      \\Sigma &= \\bmatrix{\\sigma_1^2 & \\rho \\\\ \\rho & \\sigma_2^2}\\\\\n      \\Sigma Q' &= \\bmatrix{ \\sigma_1^2q_1 + \\rho q_2 \\\\ \\rho q_1 + \\sigma_2^2 q_2 } \\\\\n      Q\\Sigma Q' &= \\bmatrix{ \\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2} \\\\\n      \\hat{\\bm{w}}=\\Sigma Q'(Q\\Sigma Q')^{-1}\\bm{a}\n         &= \\bmatrix{ \\frac{\\sigma_1^2q_1 + \\rho q_2}{\\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2} \\\\ \n                  \\frac{\\rho q_1 + \\sigma_2^2 q_2}{\\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2}} a\n   \\end{aligned}\n   $$\n\nWe can normalize $q_1=q_2=1$, then we have\n   $$\\hat{w}_1 = \\frac{\\sigma_1^2+\\rho}{\\sigma_1^2+2\\rho+\\sigma_2^2}a,$$\n\n   This means we are dividing up responsibility for the answer ($a$) into the contributions of each component, nice and simple.\n\n**With two observations and one weight.** Here we're *over-identified*. \n   $$\\begin{aligned}\n      Q  &= \\bmatrix{q^1 \\\\ q^2} \\\\\n      \\bm{a}  &= \\bmatrix{a^1 \\\\ a^2} \\\\\n      \\bm{w}  &= \\bmatrix{w } \\\\\n      \\Sigma &= \\bmatrix{\\sigma^2 }\\\\\n      \\Sigma Q' &= \\bmatrix{ \\sigma^2 q^1 & \\sigma^2 q^2 } \\\\\n      Q\\Sigma Q' &= \\bmatrix{ \\sigma^2 q^1q^1 & \\sigma^2q^1q^2 \\\\ \\sigma^2q^1q^2 & \\sigma^2q^2q^2}\n         && \\text{(this matrix doesn't have an inverse)}\n   \\end{aligned}\n   $$\n\n**With noise.** Suppose we only observe the answers with random noise, then we get this:\n$$\\begin{aligned}\n   \\ut{\\bm{a}}{$m\\times1$}   &= \\ut{Q}{$m\\times n$}\\ut{\\bm{w}}{$n\\times1$}\n      + \\ut{\\bm{e}}{$n\\times 1$} \\\\\n   \\bm{e} &\\sim N(\\bm{0},s^2I_m) && \\text{(i.i.d. noise w variance $s^2$)}\\\\\n   Cov(\\bm{w},\\bm{a})   &= \\Sigma Q' \\\\\n   Var(\\bm{a}) &= Q\\Sigma Q' + s^2I_m \\\\\n   E[\\bm{w}|Q,\\bm{q}]   &= \\Sigma Q'(Q\\Sigma Q' + s^2I_m)^{-1}\\bm{a}\n\\end{aligned}$$\n\n**Compare to Bayesian linear regression.**  We can compare this result to Bayesian linear regression (e.g. [Wikipedia](https://en.wikipedia.org/wiki/Bayesian_linear_regression)):\n   $$\\begin{aligned}\n      \\bar{\\beta}  &= \\Sigma Q'(Q\\Sigma Q' + s^2I_m)^{-1}\\bm{a}\n         && \\text{(our result)} \\\\\n      \\tilde{\\beta} &= (Q'Q+s^{2}\\Sigma^{-1})^{-1}Q'\\bm{a}\n         && \\text{(Bayesian linear regression)}\\\\\n   \\end{aligned}$$\n\n   I *believe* that these can be shown to be equivalent by the [matrix inversion lemma](https://en.wikipedia.org/wiki/Woodbury_matrix_identity), though I haven't confirmed this. There's a [note online](https://digitalcommons.usu.edu/cgi/viewcontent.cgi?article=1212&context=ece_facpub) that appears to show equivalence.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}