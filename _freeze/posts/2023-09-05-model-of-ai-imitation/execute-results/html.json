{
  "hash": "385e1199fa70f603d21ec620f5b8efed",
  "result": {
    "markdown": "---\ntitle: How LLMs Learn About the World\nauthor: Tom Cunningham, [Integrity Institute](https://integrityinstitute.org/)\ndate: today\nfig-align: center\nfig-height: 1\nexecute:\n  echo: false\n  warning: false\n  error: false\n  cache: true # caches chunk output\nformat:\n   html:\n      toc: true\n      toc-depth: 2\n      toc-location: left\n      html-math-method:\n         method: mathjax\n         url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg-full.js\"\n         #     ^ this forces SVG instead of CHTML, otherwise xypic renders weird\n      include-in-header:\n         - text: |\n            <script>window.MathJax = {\n                     loader: { load: ['[custom]/xypic.js'],\n                                 paths: {custom: 'https://cdn.jsdelivr.net/gh/sonoisa/XyJax-v3@3.0.1/build/'}},\n                  tex: {packages: {'[+]': ['xypic']},\n                     macros: {\n                        bm: [\"\\\\boldsymbol{#1}\", 1],\n                        bmatrix: [\"\\\\begin{bmatrix}#1\\\\end{bmatrix}\", 1],\n                        smallmatrix: [\"\\\\begin{smallmatrix}#1\\\\end{smallmatrix}\", 1],\n                        ut: [\"\\\\underbrace{#1}_{\\\\text{#2}}\", 2],\n                        utt: [\"\\\\underbrace{#1}_{\\\\substack{\\\\text{#2}\\\\\\\\\\\\text{#3}}}\", 3]\n                     }}};\n            </script>\n# include-in-header: \n#   - text: |\n#       <style>figure { padding: 0 0 0 0; }</style\nbibliography: ai.bib\nengine: knitr\n# editor:\n#    render-on-save: true\n---\n\n<style>\n    h1 {  border-bottom: 4px solid black; }\n    h2 {  border-bottom: 1px solid gray; padding-bottom: 0px; color: black; }\n    dl { margin-bottom: 0px; }\n    dt strong { font-weight: bold; }\n    dd { margin-left: 20px; }\n    .cell-output-display p {padding: 0 0 0 0; margin: 0 0 0 0;}\n</style>\n<!-- \n   URL: https://tecunningham.github.io/posts/2023-09-05-model-of-ai-imitation.html\n   SEE ALSO: prussia/2023-09-05-OFFCUTS-model-of-ai-imitation.md\n   TODO: use n and p instead of m and n\n   TODO: series of cases and illustrations from GPT4\n-->\n::: {.column-margin}\n   <!-- ![](images/2023-09-05-07-46-02.png) -->\n   ![](images/2023-09-05-19-11-49.png)\n:::\n<span style=\"background:yellow;\">==*Still a draft, don't circulate!*==</span>\n\n**Summary.**\n\n1. **I describe a simple model of the relationship between LLMs, humans, and the world.** Large language models (LLMs) answer questions by predicting how a human would answer that question (in their training set), and humans answer questions based on their beliefs about the world.\n\n2. **Implication: an LLM **\n\n   1. **An LLM trained on the output of a single human will generally do worse than that human.** This is because (1) the text they are trained on represents only a subset of that human's knowledge; (2) the model fit will always be imperfect. However if the human's answers are inconsistent then the LLM can do better simply by being less noisy.\n   \n   2. **An LLM trained on the output of multiple humans can outperform any one of them.** People tend to answer only the questions that they know the answer to, so predicting the answer to a question will tend to predict the answer of an expert in that field. Thus the set of LLM-answerable questions can be thought of as including, at a minimum, the union of the questions answered by people in the training set.\n   \n   3. **An LLM can answer questions no human can answer.** LLMs are not designed to explicitly make inferences about the world but the act of interpolating between observed answers will, in some circumstances, functionally operate as inference, and as a consequence the set of LLM-answerable questions can exceed the union of human-answerable questions. We already see this in LLM outputs: they can answer questions that no single human knows the answer to.\n\n   4. **An LLM can be used to extract tacit knowledge.** Much human knowledge is tacit, reflected in our lack of insight into the bases of our judgment. If an LLM can match human performance in answering questions then it will effectively make available the tacit knowledge used in those judgments, and so open up a range of capabilities much wider than any human can achieve.\n\n**Real-World Implications.**\n\n   1. **LLMs bring everybody to the knowledge frontier.** An LLM can effectively serve as a consultant: it will tell you how a domain-expert would answer your question. For some problems we've already been able to do that for a long time, e.g. a textbook will tell you scientific advice on crop management practices, but LLMs allow for much subtler contingencies and to incorporate tacit knowledge. We should therefore expect the productivity impact of LLMs to be mainly on those who are behind the knowledge frontier, and we might also expect a compression of incomes.\n   <!-- 3. By pooling all the information in the training set LLMs allow everybody to have expert-level judgment on a given subject, and so give relatively bigger advantage to those with less knowledge. -->\n\n   2. **AI could be used to create super-human artefacts.** There has been a lot of discussion about whether AI be used to exceed human abilities to create certain artefacts, e.g. hyper-beautiful paintings, hyper-addictive clickbait, hyper-persuasive text. Using the existing architecture of LLMs, which predict human outputs, this is unlikely: they might be able to predict the objects that a very talented human would produce, but would not surpass their ability. However AI could be used to generate artfeacts indirectly: instead of predicting how a human would create such an arfect, the weights that the AI has learned could be used to find the artefact which maximizes the function of interest, e.g. hyper-persuasive, or hyper-beautiful. In this way the AI could create artefacts beyond the ability of any human.^[This is roughly how image synthesis algorithms work: after training a model to recognize images, new images can be created by maximizing the learned weights.]\n\n\n#           Graphical Argument\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-1_cdde576629f1492bf970cfe10dcf12e3'}\n\n:::\n\n\n**Puzzle:** How can LLMs outperform humans if they're trained to predict human responses?\n\n**(1) Let this curve represent the world.** Each question about the world is a point on the x-axis, and the curve represents the true answer (y-axis).\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-2_b36eb930a2bdc1bcbd1b69e62af7ad13'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**(2) A human forms beliefs about the world (red curve).** The human asks two questions and gets two answers (red dots) and from these they form a belief about the nature of the world (red line).\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-3_31a99f00dfb7aea3650bd0b87a0e9245'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**(3) Train a computer to predict the human's answers (green curve).** The human records some questions and their answers (green dots), and the computer learns to predict the human's answers (green curve). Here the fit is perfectly because (1) the human reported all and only their direct experiences; (2) the computer's priors about humans' answers are the same as the human's priors about the world. In this setup we would never expect the computer to be *better* than the human at answering questions about the world.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-4_a62fd2155a2954d2d9bee17cd64a7079'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**(4) Add another human (blue curve).** Now we have two humans, each which asks different question of the world (red and blue dots), and each forms beliefs about the world which are accurate in the neighborhood of their experience.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-5_38a4528f7ce7f031359262ecfb86a073'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**(5) Let the computer predict answers from both humans (green curve).** Now both humans record their experiences and the computer tries to predict human answers (green curve). Here we can see that (1) the computer's predictions can match the humans' responses in each of their domains of expertise; (2) the computer is better than *both* humans in the intermediate region, i.e. they effectively *combine* information from both humans.\n\n\n::: {.cell hash='2023-09-05-model-of-ai-imitation_cache/html/unnamed-chunk-6_81a769e1e60c2fcfb8ff260563175bea'}\n::: {.cell-output-display}\n![](2023-09-05-model-of-ai-imitation_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n#           Discussion\n\n**When do LLMs outperform humans?** I only have some \n\n   - Translating between \n\n\n\n1. **This depends on people talking about what they know.** The performance of a computer.\n\n#           Model Setup\n\n**Consider questions and answers like the following.**\n\n| question                                                                              | answer |\n| ------------------------------------------------------------------------------------- | ------ |\n| What's the capital of Switzerland?                                                    | Geneva |\n| What's the best response if white plays c4?                                           | c5     |\n| Does this picture contain a cow? üêÑ                                                  | Yes    |\n| How much more likely are you to buy a coke after hearing the slogan \"coke refreshes\"? | 0.1%   |\n\n**The model has three steps.**\n\n   $$\\xymatrix@C=.5cm@R=0cm{\n      \\text{world}\n      && \\text{human}\n      && \\text{LLM}\\\\\n      *+[F:<5pt>]{\\bm{w}} \\ar[rr]^{\\bm{a}=Q\\bm{w}}\n      && *+[F:<5pt>]{\\hat{\\bm{w}}} \\ar[rr]^{\\hat{\\bm{a}}=\\hat{Q}\\hat{\\bm{w}}}\n      && *+[F:<5pt>]{\\bar{\\bm{w}}} \\ar[rr]^{\\tilde{a}=\\tilde{q}'\\bar{\\bm{w}}}\n      && \\  \\\\\n      \\txt{unobserved\\\\truth\\\\about\\\\the\\\\world}\n      & \\txt{answers\\\\to\\\\human\\\\questions}\n      & \\txt{beliefs\\\\formed\\\\by\\\\human}\n      & \\txt{text\\\\written\\\\by\\\\human}\n      & \\txt{LLM\\\\model\\\\of\\\\human\\\\text}\n      & \\txt{LLM's\\\\answers\\\\to\\\\new\\\\questions}\n   }$$\n\n**Questions and answers.** We will model everything as a set of questions and their answers. A question is defined by a set of binary attributes ($q_1,\\ldots,q_n\\in\\{-1,1\\}$), and the answer is a linear function of those attributes given some unobserved weights $w_1,\\ldots,w_n$:\n\n   $$\\begin{aligned}\n      \\ut{\\bmatrix{a^1 \\\\ \\vdots \\\\ a^m}}{answers}\n         = \\ut{\\bmatrix{q_1^1 w_1 + \\ldots q_n^1w_n \\\\ \\vdots \\\\ q_1^m w_1 + \\ldots q_n^mw_n}}{questions}\n   \\end{aligned}$$\n\n\n**Human beliefs.** After observing a set of question and their real-world answers the human will form beliefs about the weights $w_1,\\ldots,w_n$. We can explicitly write the human posteriors if we assume their priors are Gaussian and i.i.d. ($\\bm{w}\\sim N(0,\\sigma^2I)$):[^covariance]\n   $$\\begin{aligned}\n      \\bm{a}        &= Q\\bm{w}\n         && \\text{(questions \\& answers given true weights $\\bm{w}$)}\\\\\n      \\hat{\\bm{w}} &= Q'(QQ')^{-1}\\bm{a}\n         && \\text{(human estimate of true weights $\\bm{w}$)}\n   \\end{aligned}$$\n\n   I will assume that the number of unobserved weights is large relative to the human's experience ($n\\gg m$), so the human will gradually learn more about reality as she observes the answer to more questions, and will be able to perfectly answer any question she's seen before, but will never learn the full set of weights.\n\n   [^covariance]: I am assuming $\\bm{w}$ has zero-mean and is i.i.d. just to cut down on notation, the results all hold for the more general multivariate Normal case.\n\n**Computer beliefs.** Suppose that humans write down some set of question and answer them given their beleifs. We use that text to train a computer to predict the answer given any question, and the computer likewise assumes a linear model with i.i.d. Gaussian weights. Then we can explicitly write the computer-estimated weights:\n\n   $$\\begin{aligned}\n      \\hat{\\bm{a}}        &= \\hat{Q}\\hat{\\bm{w}}\n         && \\text{(human-generated questions \\& answers)}\\\\\n      \\bar{\\bm{w}} &= \\hat{Q}'(\\hat{Q}\\hat{Q}')^{-1}\\hat{\\bm{a}}\n         && \\text{(computer estimate of human weights $\\hat{\\bm{w}}$)}\n   \\end{aligned}$$\n\n**Computer answers.** Finally we can ask the computer a new question, $\\tilde{q}$, and observe its answer:\n   $$\\begin{aligned}\n      \\tilde{a}        &= \\tilde{\\bm{q}}'\\bar{\\bm{w}}\n         && \\text{(computer answer to a novel question $\\tilde{\\bm{q}}$)}\\\\\n   \\end{aligned}$$\n\n\n#           Model Implications\n\n**If one human records all their observations then the computer will perfectly imitate them.** \n:  Suppose that there is one human and they write down all of their observations, $\\hat{Q}=Q$. Then the computer's beliefs will be the same as the human's beliefs ($\\hat{\\bm{w}}=\\bar{\\bm{w}}$), and so the computer will answer every question exactly as the human does, though neither knows the truth ($\\bar{\\bm{w}}\\neq\\bm{w}$).\n\n**If humans do not record all their observation then the computer will perform worse.**\n:  Suppose humans only write down some of their observations, i.e. $\\hat{Q}$ is a row-wise subset of $Q$. Then computers and humans will give the same answers for any question in the training set, but outside of that set computers will generally do worse than humans. And so for every question $\\bm{q}$ the computer will do worse in expectation:\n   $$E[\\ut{(\\bm{q}\\bm{a}-\\bm{q}\\bar{\\bm{a}})^2}{computer error}]\\geq\n      E[\\ut{\\bm{q}(\\bm{a}-\\hat{\\bm{a}})}{human error}].$$\n\n<!-- ADD: will get wisdom-of-crowds if there's noise\n     ADD: mention of old literature on expert systems beating the experts -->\n\n**If there are multiple humans then the computer will outperform them both.**\n: Suppose there are two humans who each observe answers to different question, $Q_A$ and $Q_B$, and they both write them all down, so $\\bar{Q}=(\\smallmatrix{Q_A\\\\Q_B})$ and $\\bar{\\bm{a}}=(\\smallmatrix{Q_A\\bm{w}\\\\Q_B\\bm{w}})$. Now the computer clearly has superior information to either human, and so for both $i\\in\\{1,2\\}$ and every question $\\bm{q}$ we can write:\n      $$E[\\ut{(\\bm{q}\\bm{a}-\\bm{q}\\bar{\\bm{a}})^2}{computer error}]\\leq\n      E[\\ut{\\bm{q}(\\bm{a}-\\hat{\\bm{a}}_i)}{human error}].$$\n\n**If there are multiple humans then the computer can answer question no human can answer.** \n \n: Suppose two humans observe the answers to the following questions:\n   $$\\begin{aligned}\n      Q_A &= \\bmatrix{1 & 1 & 1 \\\\ 1 & -1 & 1} \\\\\n      Q_B &= \\bmatrix{1 & 1 & 1 \\\\ 1 & 1 & -1}\n   \\end{aligned}$$\n      The first human will learn the exact value of $w_2$, and the second human will learn the exact value of $w_3$, but neither will learn both, and so neither could perfectly predict the answer to this question:\n      $$\\begin{aligned}\n         \\tilde{q} &= \\bmatrix{1 & -1 & -1} \\\\\n      \\end{aligned}$$\n\n      However if they both recorded their observations, so the computer observes $\\bar{\\bm{a}}=(\\smallmatrix{Q_1\\bm{w}\\\\Q_2\\bm{w}})$, the computer will be able to infer both $w_2$ and $w_3$, and thus will be able to perfectly answer $\\tilde{q}$.\n\n      We can see this behaviour in LLMs: they sometimes combine a pair of facts or a pair of abilities which no single human has access to, e.g. when an LLM translates between two languages, for which there exists no human speaker of both.\n\n**If humans write outside their expertise then the computer will do worse.** \n\n:     In the cases above we assumed that the two humans recorded only what they directly observed. This means the computer essentially had a window directly to the world. However the humans could instead have written down their estimated answers to other questions. Suppose they both wrote down answers to every possible question, then the computer would learn the *average* of the two human's estimated weights:[^noise]\n   $$\\bar{\\bm{w}}=\\frac{1}{2}\\hat{\\bm{w}}_A+\\frac{1}{2}\\hat{\\bm{w}}_B.$$\n\n      Here the computer will do worse than the two humans on the original questions, $Q_A$ and $Q_B$.\n\n      The implication is that LLMs work so well only because people tend to write about what they know. Put another way, when an LLM answers a question, it will not predict the answer given by the average person, but will predict the answer given by people who are likely to answer that question in the real world, and luckily those people tend to be people who are subject-matter experts.\n\n   [^noise]: We would have to augment the computer's learning rule to allow for noise in answers - I need to confirm that the weighting will be exactly 1/2.\n\n\n**If humans have tacit knowledge, the computer model can outperform humans in creation of new artefacts.** \n\n: Suppose humans have tacit knowledge of the world, we can model this with two separate sets of beliefs:\n   $$\\begin{aligned}\n      \\hat{\\bm{w}}^T   &= \\text{tacit knowledge}\\\\\n      \\hat{\\bm{w}}^E &= \\text{explicit knowledge}\\\\\n   \\end{aligned}$$\n\n      When the human encounters a new question $\\tilde{\\bm{q}}$ they will use their tacit knowledge to form an estimate of the answer, $\\hat{a}=\\tilde{\\bm{q}}'\\hat{\\bm{w}}^T$. For simplicity assume tacit knowledge is perfectly accurate $\\hat{\\bm{w}}^T=\\bm{w}$, and explicit knowledge is imperfect.\n   \n      The distinction becomes important when we want to create a new question. Here it's useful to interpret $\\bm{q}$ not as a question but as an artefact, e.g. text or image, and $\\bm{a}=\\bm{q}'\\bm{w}$ represents some abstract property, e.g. how beautiful or how rhythmic. Suppose we want to chosose $\\bm{q}\\in\\{-1,1\\}^n$ to maximize $\\bm{w}\\bm{q}$. If we had perfect access to our beliefs $\\bm{w}^T$ this would be simple, however if we have access only to imperfect explicit knowledge $\\hat{\\bm{w}}^E$, the artefact which maximizes that function will not generally be the one which maximizes $a$.\n\n      Here the computer model is less constrained. Suppose the computer has observed sufficiently many questions until they have perfectly learned the tacit knowledge, $\\bar{\\bm{w}}=\\hat{\\bm{w}}^T$. Then if computation is free the computer could be used to query every single $\\bm{q}\\in\\{-1,1\\}^n$ to find the best possible artefact.\n\n#           Derivation\n\n$$\\begin{aligned}\n   Q &= \\bmatrix{q_1^1 & \\ldots & q^1_n \\\\ & \\ddots \\\\ q^m_1 & \\ldots & q^m_n}\n      && \\text{(set of questions)} \\\\\n   w'  &= \\bmatrix{w_1 \\ldots w_n} \\\\\n   a    &= \\bmatrix{a^1 \\\\ \\vdots \\\\ a^m} \n      = \\bmatrix{q_1^1 w_1 + \\ldots q_n^1w_n \\\\ \\vdots \\\\ q_1^m w_1 + \\ldots q_n^mw_n} \\\\\n\\end{aligned}$$\n\n   $$\\begin{aligned}\n      \\bm{w} &\\sim N(0,\\Sigma) \n         && (n\\times 1\\text{ vector of parameters of the world)}\\\\\n      Q      &\\in \\{-1,1\\}^{n\\times m}\n         && \\text{($m$ questions, each has $n$ binary parameters)}\\\\\n      \\ut{\\bm{a}}{$m\\times1$}   &= \\ut{Q}{$m\\times n$}\\ut{\\bm{w}}{$n\\times1$}\n         && \\text{(answers provided by the world)}\\\\\n      \\hat{\\bm{w}} &= E[\\bm{w}|Q,\\bm{a}]\n            && \\text{(human beliefs about the world)}\\\\\n         &= \\ut{\\Sigma Q'}{$Cov(\\bm{w},\\bm{a})$}\n            (\\ut{Q\\Sigma Q'}{$Var(\\bm{a})$})^{-1}\n            \\bm{a}\n   \\end{aligned}$$\n\n**With one observation and two weights.** Suppose $m=1, n=1$, then we have:\n   $$\\begin{aligned}\n      Q  &= \\bmatrix{q_1 & q_2} \\\\\n      \\bm{a}'  &= \\bmatrix{a} \\\\\n      \\bm{w}'  &= \\bmatrix{w_1 & w_2 } \\\\\n      \\Sigma &= \\bmatrix{\\sigma_1^2 & \\rho \\\\ \\rho & \\sigma_2^2}\\\\\n      \\Sigma Q' &= \\bmatrix{ \\sigma_1^2q_1 + \\rho q_2 \\\\ \\rho q_1 + \\sigma_2^2 q_2 } \\\\\n      Q\\Sigma Q' &= \\bmatrix{ \\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2} \\\\\n      \\hat{\\bm{w}}=\\Sigma Q'(Q\\Sigma Q')^{-1}\\bm{a}\n         &= \\bmatrix{ \\frac{\\sigma_1^2q_1 + \\rho q_2}{\\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2} \\\\ \n                  \\frac{\\rho q_1 + \\sigma_2^2 q_2}{\\sigma_1^2q_1^2 + 2\\rho q_1q_2 + \\sigma_2^2 q_2^2}} a\n   \\end{aligned}\n   $$\n\nWe can normalize $q_1=q_2=1$, then we have\n   $$\\hat{w}_1 = \\frac{\\sigma_1^2+\\rho}{\\sigma_1^2+2\\rho+\\sigma_2^2}a,$$\n\n   This means we are dividing up responsibility for the answer ($a$) into the contributions of each component, nice and simple.\n\n**With two observations and one weight.** Here we're *over-identified*. \n   $$\\begin{aligned}\n      Q  &= \\bmatrix{q^1 \\\\ q^2} \\\\\n      \\bm{a}  &= \\bmatrix{a^1 \\\\ a^2} \\\\\n      \\bm{w}  &= \\bmatrix{w } \\\\\n      \\Sigma &= \\bmatrix{\\sigma^2 }\\\\\n      \\Sigma Q' &= \\bmatrix{ \\sigma^2 q^1 & \\sigma^2 q^2 } \\\\\n      Q\\Sigma Q' &= \\bmatrix{ \\sigma^2 q^1q^1 & \\sigma^2q^1q^2 \\\\ \\sigma^2q^1q^2 & \\sigma^2q^2q^2}\n         && \\text{(this matrix doesn't have an inverse)}\n   \\end{aligned}\n   $$\n\n**With noise.** Suppose we only observe the answers with random noise, then we get this:\n$$\\begin{aligned}\n   \\ut{\\bm{a}}{$m\\times1$}   &= \\ut{Q}{$m\\times n$}\\ut{\\bm{w}}{$n\\times1$}\n      + \\ut{\\bm{e}}{$n\\times 1$} \\\\\n   \\bm{e} &\\sim N(\\bm{0},s^2I_m) && \\text{(i.i.d. noise w variance $s^2$)}\\\\\n   Cov(\\bm{w},\\bm{a})   &= \\Sigma Q' \\\\\n   Var(\\bm{a}) &= Q\\Sigma Q' + s^2I_m \\\\\n   E[\\bm{w}|Q,\\bm{q}]   &= \\Sigma Q'(Q\\Sigma Q' + s^2I_m)^{-1}\\bm{a}\n\\end{aligned}$$\n\n**Compare to Bayesian linear regression.**  We can compare this result to Bayesian linear regression (e.g. [Wikipedia](https://en.wikipedia.org/wiki/Bayesian_linear_regression)):\n   $$\\begin{aligned}\n      \\bar{\\beta}  &= \\Sigma Q'(Q\\Sigma Q' + s^2I_m)^{-1}\\bm{a}\n         && \\text{(our result)} \\\\\n      \\tilde{\\beta} &= (Q'Q+s^{2}\\Sigma^{-1})^{-1}Q'\\bm{a}\n         && \\text{(Bayesian linear regression)}\\\\\n   \\end{aligned}$$\n\n   I *believe* that these can be shown to be equivalent by the [matrix inversion lemma](https://en.wikipedia.org/wiki/Woodbury_matrix_identity), though I haven't confirmed this. There's a [note online](https://digitalcommons.usu.edu/cgi/viewcontent.cgi?article=1212&context=ece_facpub) that appears to show equivalence.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}